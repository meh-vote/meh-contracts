{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:11",
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "getRouter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CCIPReceiver",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_ccipRouter",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getSupportedTokens(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "cc9258e016f634f922fb5d04a89362b4388994d522f2710072487c9db09de23c",
          "withoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59",
          "linkedWithoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/IERCAd.sol:IERCAd": {
        "src": "contracts/ERCAd/IERCAd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "hasSignedAd(uint256,bytes32[])",
          "isInAudience(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV2.sol:MehAdV2": {
        "src": "contracts/MehAdV2.sol:11",
        "version": {
          "withMetadata": "18fc669bcbc1a06c5a2b12de0d757e8d7716fc4ae158f0ce99c4322ce9c9e4a3",
          "withoutMetadata": "3405c70b058166b73f5bdfad9ab97c7c805891cda1d2d2c31c028441e130d23a",
          "linkedWithoutMetadata": "3405c70b058166b73f5bdfad9ab97c7c805891cda1d2d2c31c028441e130d23a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address,address,address,address,uint64)",
          "sendMessage(uint64,address,(uint256,uint256))",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "withdrawMeh()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV2",
            "src": "contracts/MehAdV2.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mainnetContractAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:15"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRouterClient)184",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:16"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)443",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:17"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)443",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:18"
            },
            {
              "label": "ercAdContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IERCAd)532",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:19"
            },
            {
              "label": "destinationChainSelector",
              "offset": 20,
              "slot": "5",
              "type": "t_uint64",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)443": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IERCAd)532": {
              "label": "contract IERCAd",
              "numberOfBytes": "20"
            },
            "t_contract(IRouterClient)184": {
              "label": "contract IRouterClient",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehCrossChain.sol:MehCrossChain": {
        "src": "contracts/MehCrossChain.sol:10",
        "version": {
          "withMetadata": "799b42d7ed8413817b7041af2aac89e3769f43aabc489fde9ca244334319dbc8",
          "withoutMetadata": "9135934c21d70efd0e7596a58f0363cf814edfc6033dfd23c2de6fcbcc428298",
          "linkedWithoutMetadata": "9135934c21d70efd0e7596a58f0363cf814edfc6033dfd23c2de6fcbcc428298"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint64)",
          "setSourceContractAddress(address)",
          "withdrawETH()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehCrossChain",
            "src": "contracts/MehCrossChain.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)443",
              "contract": "MehCrossChain",
              "src": "contracts/MehCrossChain.sol:11"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRouterClient)184",
              "contract": "MehCrossChain",
              "src": "contracts/MehCrossChain.sol:12"
            },
            {
              "label": "sourceChainSelector",
              "offset": 20,
              "slot": "2",
              "type": "t_uint64",
              "contract": "MehCrossChain",
              "src": "contracts/MehCrossChain.sol:13"
            },
            {
              "label": "sourceContractAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MehCrossChain",
              "src": "contracts/MehCrossChain.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)443": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRouterClient)184": {
              "label": "contract IRouterClient",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "eba02eafa3bf28ea48a10f68919aea2c31d3a54d4a83960e475c71b898cece21",
          "withoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c",
          "linkedWithoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "7161be4bfa99220464bb511508354b1264d1ba526a6ca25f42cd92b36c0f7192",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "e7cdec6bbe0f3552bb14d4ce0e3ab556b766bc0d9659ac3a2af2bb1e8a1b662c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "ad7905cc48fc2f09f854577999c4e3f2cd71fcafc98c3deb0495cc6be0b1e5e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "8ec3bb1e8dcee91b8298109ff884fc3adc11b54cabebb7ca2cb3bb45898deedc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8be9c31c5cd3186ee3c7f03e1e4feae2abcee6281524227fc2eb76af61734e9c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "9f0d4c057b463341140c219f7e00976fc30b127ce1902cdb1c02177b8ee28576",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/ERCAd.sol:ERCAd": {
        "src": "contracts/ERCAd/ERCAd.sol:11",
        "version": {
          "withMetadata": "491f3aba24d0bc9a4a0f1e2e93d0db633bf6c014b5d2da0f4d03b1f992884d9e",
          "withoutMetadata": "cbdf6c13953a6d2aed6ebef63cb6a9f632fdf8a3ffe8f607224532ebb7b938cc",
          "linkedWithoutMetadata": "cbdf6c13953a6d2aed6ebef63cb6a9f632fdf8a3ffe8f607224532ebb7b938cc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(string,string)",
          "tokenURI(uint256)",
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "isInAudience(uint256,bytes32[])",
          "hasSignedAd(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERCAd",
            "src": "contracts/ERCAd/ERCAd.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)1644_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)3796_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)3796_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)3796_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)3796_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)1644_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/IERCAd.sol:IERCAd": {
        "src": "contracts/ERCAd/IERCAd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "hasSignedAd(uint256,bytes32[])",
          "isInAudience(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV1.sol:MehAdV1": {
        "src": "contracts/MehAdV1.sol:4",
        "version": {
          "withMetadata": "9e70df9b9a639dee1947f682b1bbc4d931aca6078b8ebf15e3fbbc1d68fa688f",
          "withoutMetadata": "2f92f01b4daefb5ef5fdb535153ddfc27c1ed558faf48cf9baff2e38be1f1033",
          "linkedWithoutMetadata": "2f92f01b4daefb5ef5fdb535153ddfc27c1ed558faf48cf9baff2e38be1f1033"
        },
        "inherit": [
          "contracts/ERCAd/ERCAd.sol:ERCAd",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "signAd(uint256,bytes32[])",
          "adAmt()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV1",
            "src": "contracts/MehAdV1.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)1644_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)3796_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)3796_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)190",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:5"
            },
            {
              "label": "discounts",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)3796_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)3796_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)1644_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:11",
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "getRouter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CCIPReceiver",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_ccipRouter",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getSupportedTokens(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "cc9258e016f634f922fb5d04a89362b4388994d522f2710072487c9db09de23c",
          "withoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59",
          "linkedWithoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "eba02eafa3bf28ea48a10f68919aea2c31d3a54d4a83960e475c71b898cece21",
          "withoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c",
          "linkedWithoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "7161be4bfa99220464bb511508354b1264d1ba526a6ca25f42cd92b36c0f7192",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "e7cdec6bbe0f3552bb14d4ce0e3ab556b766bc0d9659ac3a2af2bb1e8a1b662c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "ad7905cc48fc2f09f854577999c4e3f2cd71fcafc98c3deb0495cc6be0b1e5e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "8ec3bb1e8dcee91b8298109ff884fc3adc11b54cabebb7ca2cb3bb45898deedc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8be9c31c5cd3186ee3c7f03e1e4feae2abcee6281524227fc2eb76af61734e9c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "9f0d4c057b463341140c219f7e00976fc30b127ce1902cdb1c02177b8ee28576",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/ERCAd.sol:ERCAd": {
        "src": "contracts/ERCAd/ERCAd.sol:11",
        "version": {
          "withMetadata": "8ba16e4b868854e2ee1d487fa2df86768d80a1a9bd54543a296325506e3dffbe",
          "withoutMetadata": "949ab989c3ef171f4dd042f3f7ca21b4fa690cd3d322e66ae072cf462ae45a36",
          "linkedWithoutMetadata": "949ab989c3ef171f4dd042f3f7ca21b4fa690cd3d322e66ae072cf462ae45a36"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(string,string)",
          "tokenURI(uint256)",
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "isInAudience(uint256,bytes32[])",
          "hasSignedAd(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERCAd",
            "src": "contracts/ERCAd/ERCAd.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)1962_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)4121_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)4121_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)4121_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)4121_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)1962_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/IERCAd.sol:IERCAd": {
        "src": "contracts/ERCAd/IERCAd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "hasSignedAd(uint256,bytes32[])",
          "isInAudience(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV1.sol:MehAdV1": {
        "src": "contracts/MehAdV1.sol:4",
        "version": {
          "withMetadata": "594b5a98e54fbf584226824d8dd7d36f09734d30247e3b2d3316e10c505c71a1",
          "withoutMetadata": "ed699ce5daa4be7925f6e5adae65daedf28c2eedaddb1379ff86644ff3d38936",
          "linkedWithoutMetadata": "ed699ce5daa4be7925f6e5adae65daedf28c2eedaddb1379ff86644ff3d38936"
        },
        "inherit": [
          "contracts/ERCAd/ERCAd.sol:ERCAd",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "signAd(uint256,bytes32[])",
          "adAmt()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV1",
            "src": "contracts/MehAdV1.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)1962_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)4121_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)4121_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)508",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:5"
            },
            {
              "label": "discounts",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)508": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)4121_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)4121_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)1962_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV2.sol:MehAdV2": {
        "src": "contracts/MehAdV2.sol:11",
        "version": {
          "withMetadata": "8b33d561dced783c075fc1c5dce26082ff989d33f11e1523b07d86171bc92be8",
          "withoutMetadata": "fa582f4ad40b814dd896369af6313d978e567284274f3467a43dacf8d962a9af",
          "linkedWithoutMetadata": "fa582f4ad40b814dd896369af6313d978e567284274f3467a43dacf8d962a9af"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address,address,address,address,uint64)",
          "sendWalletAddress()",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "withdrawMeh()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV2",
            "src": "contracts/MehAdV2.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mainnetContractAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:15"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRouterClient)184",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:16"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)508",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:17"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)508",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:18"
            },
            {
              "label": "ercAdContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IERCAd)4169",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:19"
            },
            {
              "label": "destinationChainSelector",
              "offset": 20,
              "slot": "5",
              "type": "t_uint64",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)508": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IERCAd)4169": {
              "label": "contract IERCAd",
              "numberOfBytes": "20"
            },
            "t_contract(IRouterClient)184": {
              "label": "contract IRouterClient",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/store/MehStoreNFT.sol:MehStoreNFT": {
        "src": "contracts/store/MehStoreNFT.sol:7",
        "version": {
          "withMetadata": "9953b40c20c69949fe28aac04215d894f7779e56f3bb6717e6a9527087670f8d",
          "withoutMetadata": "9f130a49f57647be413d0bb80c48b096768a18e041609651a338050a11e967f2",
          "linkedWithoutMetadata": "9f130a49f57647be413d0bb80c48b096768a18e041609651a338050a11e967f2"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setMehStoreV1(address)",
          "mint(address,uint256,uint256)",
          "getPrice(uint256)",
          "enterDeliveryAddress(uint256,string)",
          "burn(uint256)",
          "getTokenIdByProductId(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehStoreNFT",
            "src": "contracts/store/MehStoreNFT.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "nftDetails",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(NFTDetails)4643_storage)",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:14"
            },
            {
              "label": "productToToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:15"
            },
            {
              "label": "nextTokenId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:16"
            },
            {
              "label": "mehStoreV1",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTDetails)4643_storage)": {
              "label": "mapping(uint256 => struct MehStoreNFT.NFTDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTDetails)4643_storage": {
              "label": "struct MehStoreNFT.NFTDetails",
              "members": [
                {
                  "label": "productId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deliveryAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/store/MehStoreV1.sol:MehStoreV1": {
        "src": "contracts/store/MehStoreV1.sol:9",
        "version": {
          "withMetadata": "fe0943d67b6cac8683f8292de506f8b4517e10f9d0dcff433e057b5cd4d8098f",
          "withoutMetadata": "e969632fdea1990804458e421d704adaaf82ced31b1d3b6e4916b395f2868220",
          "linkedWithoutMetadata": "e969632fdea1990804458e421d704adaaf82ced31b1d3b6e4916b395f2868220"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addProduct(uint256,string,string,string,uint8)",
          "purchaseProduct(uint256)",
          "refund(uint256)",
          "shipProduct(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehStoreV1",
            "src": "contracts/store/MehStoreV1.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)508",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:32"
            },
            {
              "label": "products",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Product)4835_storage)",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:33"
            },
            {
              "label": "escrow",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:34"
            },
            {
              "label": "nextProductId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:36"
            },
            {
              "label": "mehStoreNFT",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(MehStoreNFT)4802",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)508": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(MehStoreNFT)4802": {
              "label": "contract MehStoreNFT",
              "numberOfBytes": "20"
            },
            "t_enum(Category)4821": {
              "label": "enum MehStoreV1.Category",
              "members": [
                "Shirt",
                "Hoodie",
                "Hat",
                "Deck",
                "Hair",
                "Jacket",
                "Pants",
                "CyberMask",
                "Digital",
                "Stimulants"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(Product)4835_storage)": {
              "label": "mapping(uint256 => struct MehStoreV1.Product)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Product)4835_storage": {
              "label": "struct MehStoreV1.Product",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "mediaURL",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "category",
                  "type": "t_enum(Category)4821",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isShipped",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:11",
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "getRouter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CCIPReceiver",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_ccipRouter",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getSupportedTokens(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "cc9258e016f634f922fb5d04a89362b4388994d522f2710072487c9db09de23c",
          "withoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59",
          "linkedWithoutMetadata": "11afc80964866bfa54894ffcb23e823144a59c3223d17dcfc6337df5d9897d59"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "b91e6361ae9bc769fbc837dd46ec76c3a8be8b5af351f4a19eb450e85e913ffb",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "2598d27a98b34b4c6e62b80a6ce69cdd7bf60ba53e19812ce2d361da5236bec3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "eba02eafa3bf28ea48a10f68919aea2c31d3a54d4a83960e475c71b898cece21",
          "withoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c",
          "linkedWithoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "7161be4bfa99220464bb511508354b1264d1ba526a6ca25f42cd92b36c0f7192",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "e7cdec6bbe0f3552bb14d4ce0e3ab556b766bc0d9659ac3a2af2bb1e8a1b662c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "ad7905cc48fc2f09f854577999c4e3f2cd71fcafc98c3deb0495cc6be0b1e5e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "8ec3bb1e8dcee91b8298109ff884fc3adc11b54cabebb7ca2cb3bb45898deedc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8be9c31c5cd3186ee3c7f03e1e4feae2abcee6281524227fc2eb76af61734e9c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "9f0d4c057b463341140c219f7e00976fc30b127ce1902cdb1c02177b8ee28576",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/ERCAd.sol:ERCAd": {
        "src": "contracts/ERCAd/ERCAd.sol:11",
        "version": {
          "withMetadata": "52ec377805390f198bc1fa3fd1efab524641a70ff935a4887f02ea7767fd029e",
          "withoutMetadata": "949ab989c3ef171f4dd042f3f7ca21b4fa690cd3d322e66ae072cf462ae45a36",
          "linkedWithoutMetadata": "949ab989c3ef171f4dd042f3f7ca21b4fa690cd3d322e66ae072cf462ae45a36"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(string,string)",
          "tokenURI(uint256)",
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "isInAudience(uint256,bytes32[])",
          "hasSignedAd(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERCAd",
            "src": "contracts/ERCAd/ERCAd.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2986_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)5145_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)5145_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)5145_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)5145_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)2986_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERCAd/IERCAd.sol:IERCAd": {
        "src": "contracts/ERCAd/IERCAd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAd(string,string,bytes32,bytes32)",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "hasSignedAd(uint256,bytes32[])",
          "isInAudience(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Meh.sol:Meh": {
        "src": "contracts/Meh.sol:8",
        "version": {
          "withMetadata": "e946aac74193e5eaa4c1c4a271ad74c9821d907e2aee1df83d2eee3d71f21970",
          "withoutMetadata": "064ec75cc58f9426add3c4e5ecf027d8ba47455b5e2c018c64e0206d55967745",
          "linkedWithoutMetadata": "064ec75cc58f9426add3c4e5ecf027d8ba47455b5e2c018c64e0206d55967745"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Meh",
            "src": "contracts/Meh.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV1.sol:MehAdV1": {
        "src": "contracts/MehAdV1.sol:4",
        "version": {
          "withMetadata": "124af48149d90ffaa2be632f2871edff2d837bae01f16e1bc8035202243a915a",
          "withoutMetadata": "ed699ce5daa4be7925f6e5adae65daedf28c2eedaddb1379ff86644ff3d38936",
          "linkedWithoutMetadata": "ed699ce5daa4be7925f6e5adae65daedf28c2eedaddb1379ff86644ff3d38936"
        },
        "inherit": [
          "contracts/ERCAd/ERCAd.sol:ERCAd",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERCAd/IERCAd.sol:IERCAd"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "signAd(uint256,bytes32[])",
          "adAmt()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV1",
            "src": "contracts/MehAdV1.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_adIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2986_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:13"
            },
            {
              "label": "activeAd",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Ad)5145_storage",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:15"
            },
            {
              "label": "ads",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Ad)5145_storage)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:16"
            },
            {
              "label": "hasSigned",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERCAd",
              "src": "contracts/ERCAd/ERCAd.sol:17"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC20)1095",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:5"
            },
            {
              "label": "discounts",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MehAdV1",
              "src": "contracts/MehAdV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1095": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Ad)5145_storage)": {
              "label": "mapping(uint256 => struct IERCAd.Ad)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Ad)5145_storage": {
              "label": "struct IERCAd.Ad",
              "members": [
                {
                  "label": "adURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "signatureRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "audienceRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Counter)2986_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAdV2.sol:MehAdV2": {
        "src": "contracts/MehAdV2.sol:11",
        "version": {
          "withMetadata": "5e4434f9a32d554669daa39a37806946ab50f0427e310938e13981f6e17eace5",
          "withoutMetadata": "0df200430d880aae6293bfa7b0d5b653fe7e411b37002e8faf8054746aa11b42",
          "linkedWithoutMetadata": "0df200430d880aae6293bfa7b0d5b653fe7e411b37002e8faf8054746aa11b42"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address,address,address,address,uint64)",
          "sendWalletAddress()",
          "signAd(uint256,bytes32[])",
          "displayAd(uint256)",
          "withdrawMeh()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAdV2",
            "src": "contracts/MehAdV2.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mainnetContractAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:15"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRouterClient)184",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:16"
            },
            {
              "label": "mehToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)1095",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:17"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)1095",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:18"
            },
            {
              "label": "ercAdContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IERCAd)5193",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:19"
            },
            {
              "label": "destinationChainSelector",
              "offset": 20,
              "slot": "5",
              "type": "t_uint64",
              "contract": "MehAdV2",
              "src": "contracts/MehAdV2.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1095": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IERCAd)5193": {
              "label": "contract IERCAd",
              "numberOfBytes": "20"
            },
            "t_contract(IRouterClient)184": {
              "label": "contract IRouterClient",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehAirdropV1.sol:MehAirdropV1": {
        "src": "contracts/MehAirdropV1.sol:8",
        "version": {
          "withMetadata": "7a88ca2965129f1cfeb1232eae85e2611bc6a8392181ce35d403055361d55448",
          "withoutMetadata": "e036505ad64a9fc2db3749ea75d1e33ae15c91a6491c8214f522a1e9a80fb65d",
          "linkedWithoutMetadata": "e036505ad64a9fc2db3749ea75d1e33ae15c91a6491c8214f522a1e9a80fb65d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "airdrop(address[],uint256[])",
          "withdrawMeh(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehAirdropV1",
            "src": "contracts/MehAirdropV1.sol:12"
          },
          {
            "kind": "state-variable-immutable",
            "name": "meh",
            "src": "contracts/MehAirdropV1.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehClaimV1.sol:MehClaimV1": {
        "src": "contracts/MehClaimV1.sol:8",
        "version": {
          "withMetadata": "8aa0d3dafbe51dde1c0ba7023be0412c17a37325f5e5afbaff66c189b02b6eee",
          "withoutMetadata": "7858c43780660e97776825c27b47c1a1a7c2a6d9b53a9c69a21a775aff711941",
          "linkedWithoutMetadata": "7858c43780660e97776825c27b47c1a1a7c2a6d9b53a9c69a21a775aff711941"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "faucet()",
          "toggleFaucet()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehClaimV1",
            "src": "contracts/MehClaimV1.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "mehToken",
            "src": "contracts/MehClaimV1.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "lastAccessTime",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MehClaimV1",
              "src": "contracts/MehClaimV1.sol:15"
            },
            {
              "label": "faucetOn",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "MehClaimV1",
              "src": "contracts/MehClaimV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehFaucetV1.sol:MehFaucetV1": {
        "src": "contracts/MehFaucetV1.sol:8",
        "version": {
          "withMetadata": "c6b23ef13f5152a3c74fa441d79fcbf813f80e766c9ad4aef80260a82fcf1027",
          "withoutMetadata": "fd775de36a50257b16f81002c597fd56c8729239a03891bcbd37283db74797dd",
          "linkedWithoutMetadata": "fd775de36a50257b16f81002c597fd56c8729239a03891bcbd37283db74797dd"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "faucet()",
          "toggleFaucet()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehFaucetV1",
            "src": "contracts/MehFaucetV1.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "mehToken",
            "src": "contracts/MehFaucetV1.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "lastAccessTime",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MehFaucetV1",
              "src": "contracts/MehFaucetV1.sol:15"
            },
            {
              "label": "faucetOn",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "MehFaucetV1",
              "src": "contracts/MehFaucetV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehRoyaltyV1.sol:MehRoyaltyV1": {
        "src": "contracts/MehRoyaltyV1.sol:11",
        "version": {
          "withMetadata": "852e46629e75847eb8451658aa91f25c5528c7c25219e9c529fcc35b3882e430",
          "withoutMetadata": "1b94f8464842f011860e8381c5e75300c3d87109df73c2362cf2faf5ce8bd8c1",
          "linkedWithoutMetadata": "1b94f8464842f011860e8381c5e75300c3d87109df73c2362cf2faf5ce8bd8c1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createProduct(uint256,uint256)",
          "mint(uint256,address)",
          "depositMehToken(uint256,uint256)",
          "extractMehToken(uint256,uint256)",
          "setBaseTokenURI(string)",
          "updateMinter(address)",
          "baseURI()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehRoyaltyV1",
            "src": "contracts/MehRoyaltyV1.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "mehToken",
            "src": "contracts/MehRoyaltyV1.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "MehRoyaltyV1",
              "src": "contracts/MehRoyaltyV1.sol:12"
            },
            {
              "label": "MINTER_ADDRESS",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MehRoyaltyV1",
              "src": "contracts/MehRoyaltyV1.sol:14"
            },
            {
              "label": "products",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Product)6138_storage)",
              "contract": "MehRoyaltyV1",
              "src": "contracts/MehRoyaltyV1.sol:25"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MehRoyaltyV1",
              "src": "contracts/MehRoyaltyV1.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Product)6138_storage)": {
              "label": "mapping(uint256 => struct MehRoyaltyV1.Product)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Product)6138_storage": {
              "label": "struct MehRoyaltyV1.Product",
              "members": [
                {
                  "label": "totalContracts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSerial",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehVoteV1.sol:IRoyalty": {
        "src": "contracts/MehVoteV1.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositMehToken(uint256,uint256)",
          "mint(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/MehVoteV1.sol:MehVoteV1": {
        "src": "contracts/MehVoteV1.sol:15",
        "version": {
          "withMetadata": "e4a2ef03d11e2159b0fbb6f229727a7e3d31a21d146e8890a8ab8eec3d6e5819",
          "withoutMetadata": "fd1a8537f80de77ab2aba9d922ed8ef0473b60378bee2e240edcdbcb63a6871d",
          "linkedWithoutMetadata": "fd1a8537f80de77ab2aba9d922ed8ef0473b60378bee2e240edcdbcb63a6871d"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters"
        ],
        "methods": [
          "(address,address)",
          "createGame(uint256,uint256)",
          "addProductToGame(uint256,string,uint256,uint256,uint256,uint256,uint256,bool,uint256)",
          "depositMeh(uint256,uint256,uint256)",
          "depositMehStore(uint256)",
          "claim(uint256,uint256)",
          "getProductsByGameId(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehVoteV1",
            "src": "contracts/MehVoteV1.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "mehToken",
            "src": "contracts/MehVoteV1.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "royalties",
            "src": "contracts/MehVoteV1.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "gameIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)2986_storage",
              "contract": "MehVoteV1",
              "src": "contracts/MehVoteV1.sol:20"
            },
            {
              "label": "productIdCounter",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)2986_storage",
              "contract": "MehVoteV1",
              "src": "contracts/MehVoteV1.sol:21"
            },
            {
              "label": "games",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(Game)6427_storage)",
              "contract": "MehVoteV1",
              "src": "contracts/MehVoteV1.sol:52"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "MehVoteV1",
              "src": "contracts/MehVoteV1.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Product)6450_storage)dyn_storage": {
              "label": "struct MehVoteV1.Product[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Game)6427_storage)": {
              "label": "mapping(uint256 => struct MehVoteV1.Game)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2986_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Game)6427_storage": {
              "label": "struct MehVoteV1.Game",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "begin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "end",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "products",
                  "type": "t_array(t_struct(Product)6450_storage)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numProducts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Product)6450_storage": {
              "label": "struct MehVoteV1.Product",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "mehContractsDeposited",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "mehContracts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mehContractPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "prizeMeh",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "mehStore",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "begin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "end",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalContracts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "limitedRun",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ccip/MehCCIPLink.sol:MehCCIPLink": {
        "src": "contracts/ccip/MehCCIPLink.sol:10",
        "version": {
          "withMetadata": "385b47508f175595c475e996fd973dab5abc357ceb21337d5c5f0e5f3e526572",
          "withoutMetadata": "95f44a546df6ac0be76dd69512762be20e8d86b5c4ef465c35d20e7a0fbf08a6",
          "linkedWithoutMetadata": "95f44a546df6ac0be76dd69512762be20e8d86b5c4ef465c35d20e7a0fbf08a6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address,uint64)",
          "setSourceContractAddress(address)",
          "withdrawETH()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehCCIPLink",
            "src": "contracts/ccip/MehCCIPLink.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1095",
              "contract": "MehCCIPLink",
              "src": "contracts/ccip/MehCCIPLink.sol:11"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRouterClient)184",
              "contract": "MehCCIPLink",
              "src": "contracts/ccip/MehCCIPLink.sol:12"
            },
            {
              "label": "sourceChainSelector",
              "offset": 20,
              "slot": "2",
              "type": "t_uint64",
              "contract": "MehCCIPLink",
              "src": "contracts/ccip/MehCCIPLink.sol:13"
            },
            {
              "label": "sourceContractAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MehCCIPLink",
              "src": "contracts/ccip/MehCCIPLink.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1095": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRouterClient)184": {
              "label": "contract IRouterClient",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/store/MehStoreNFT.sol:MehStoreNFT": {
        "src": "contracts/store/MehStoreNFT.sol:7",
        "version": {
          "withMetadata": "9953b40c20c69949fe28aac04215d894f7779e56f3bb6717e6a9527087670f8d",
          "withoutMetadata": "9f130a49f57647be413d0bb80c48b096768a18e041609651a338050a11e967f2",
          "linkedWithoutMetadata": "9f130a49f57647be413d0bb80c48b096768a18e041609651a338050a11e967f2"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setMehStoreV1(address)",
          "mint(address,uint256,uint256)",
          "getPrice(uint256)",
          "enterDeliveryAddress(uint256,string)",
          "burn(uint256)",
          "getTokenIdByProductId(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehStoreNFT",
            "src": "contracts/store/MehStoreNFT.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "nftDetails",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(NFTDetails)7162_storage)",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:14"
            },
            {
              "label": "productToToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:15"
            },
            {
              "label": "nextTokenId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:16"
            },
            {
              "label": "mehStoreV1",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MehStoreNFT",
              "src": "contracts/store/MehStoreNFT.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTDetails)7162_storage)": {
              "label": "mapping(uint256 => struct MehStoreNFT.NFTDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTDetails)7162_storage": {
              "label": "struct MehStoreNFT.NFTDetails",
              "members": [
                {
                  "label": "productId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deliveryAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/store/MehStoreV1.sol:MehStoreV1": {
        "src": "contracts/store/MehStoreV1.sol:8",
        "version": {
          "withMetadata": "a617e617c919014d301976617a19acb1f0ba9f15d6b3dfa4988c6f63c51b61b9",
          "withoutMetadata": "8c2f67613cef5fbd87c8ea016a6a1d4c4849b3f27d6e2456f2a91a0884be1a9c",
          "linkedWithoutMetadata": "8c2f67613cef5fbd87c8ea016a6a1d4c4849b3f27d6e2456f2a91a0884be1a9c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addProduct(uint256,string,string,string,uint8)",
          "purchaseProduct(uint256)",
          "refund(uint256)",
          "shipProduct(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MehStoreV1",
            "src": "contracts/store/MehStoreV1.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1095",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:30"
            },
            {
              "label": "products",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Product)7352_storage)",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:31"
            },
            {
              "label": "escrow",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:32"
            },
            {
              "label": "nextProductId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:34"
            },
            {
              "label": "mehStoreNFT",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(MehStoreNFT)7321",
              "contract": "MehStoreV1",
              "src": "contracts/store/MehStoreV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)1095": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(MehStoreNFT)7321": {
              "label": "contract MehStoreNFT",
              "numberOfBytes": "20"
            },
            "t_enum(Category)7338": {
              "label": "enum MehStoreV1.Category",
              "members": [
                "Shirt",
                "Hoodie",
                "Hat",
                "Deck",
                "Hair",
                "Jacket",
                "Pants",
                "CyberMask",
                "Digital"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(Product)7352_storage)": {
              "label": "mapping(uint256 => struct MehStoreV1.Product)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Product)7352_storage": {
              "label": "struct MehStoreV1.Product",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "mediaURL",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "category",
                  "type": "t_enum(Category)7338",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isShipped",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    }
  ]
}